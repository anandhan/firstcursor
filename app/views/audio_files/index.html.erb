<div class="container mt-4">
  <h1 class="mb-4">Audio File Parser</h1>

  <% if flash[:notice] %>
    <div class="alert alert-success">
      <%= flash[:notice] %>
    </div>
  <% end %>

  <% if flash[:alert] %>
    <div class="alert alert-danger">
      <%= flash[:alert] %>
    </div>
  <% end %>

  <!-- Directory Parser Form -->
  <div class="card mb-4">
    <div class="card-body">
      <h5 class="card-title">Parse Directory</h5>
      <%= form_tag parse_audio_files_path, method: :post, class: "mb-3", id: "directory-form" do %>
        <div class="input-group">
          <input type="text" id="directory-path-display" class="form-control" placeholder="Select a directory" readonly>
          <input type="hidden" id="directory-path" name="directory_path">
          <input type="file" id="directory-input" 
                 class="d-none" 
                 webkitdirectory="" 
                 directory="" 
                 mozdirectory="" 
                 accept=""
                 onchange="updateDirectoryPath(this)">
          <button type="button" class="btn btn-outline-secondary" onclick="document.getElementById('directory-input').click()">
            <i class="bi bi-folder"></i> Browse
          </button>
          <%= submit_tag "Parse Directory", class: "btn btn-primary" %>
        </div>
        <small class="text-muted mt-2 d-block">
          <i class="bi bi-info-circle"></i>
          Click Browse to select a directory containing your audio files. This will not upload files, only scan the selected directory.
        </small>
      <% end %>

      <script>
        function updateDirectoryPath(input) {
          if (input.files && input.files.length > 0) {
            // Get the first file from the selection
            const file = input.files[0];
            
            // For Chrome, we'll use the webkitRelativePath
            if (file.webkitRelativePath) {
              // The webkitRelativePath will be something like "directory/subdirectory/file.txt"
              // We need to extract just the directory part
              const fullPath = file.webkitRelativePath;
              const directoryPath = fullPath.substring(0, fullPath.lastIndexOf('/'));
              
              // Update the display with the directory path
              document.getElementById('directory-path-display').value = directoryPath;
              document.getElementById('directory-path').value = directoryPath;
              
              // Log the path for debugging
              console.log('Selected directory:', directoryPath);
              console.log('Full webkitRelativePath:', fullPath);
            } else {
              console.warn('Could not get directory path. Please try selecting the directory again.');
            }
          }
        }
      </script>
    </div>
  </div>

  <!-- Directory Contents -->
  <% if @directory_contents %>
    <div class="card mb-4">
      <div class="card-body">
        <h5 class="card-title">Directory Contents</h5>
        
        <!-- Directories -->
        <% if @directory_contents[:directories].any? %>
          <h6 class="mt-3">Directories</h6>
          <ul class="list-group mb-3">
            <% @directory_contents[:directories].each do |dir| %>
              <li class="list-group-item">
                <i class="bi bi-folder"></i> <%= dir %>
              </li>
            <% end %>
          </ul>
        <% end %>

        <!-- Files -->
        <h6 class="mt-3">Files</h6>
        <ul class="list-group">
          <% @directory_contents[:files].each do |file| %>
            <li class="list-group-item">
              <% icon = case file[:type]
                       when '.mp3', '.wav', '.m4a', '.flac', '.ogg' then 'bi-music-note-beamed'
                       when '.jpg', '.jpeg', '.png', '.gif' then 'bi-image'
                       when '.txt', '.md' then 'bi-file-text'
                       else 'bi-file-earmark'
                       end %>
              <i class="bi <%= icon %>"></i>
              <%= file[:path] %>
              <span class="badge bg-secondary float-end">
                <%= number_to_human_size(file[:size]) %>
              </span>
            </li>
          <% end %>
        </ul>
      </div>
    </div>
  <% end %>

  <!-- Audio Files -->
  <div class="card">
    <div class="card-body">
      <h5 class="card-title">Audio Files</h5>
      <% if @audio_files.any? %>
        <div class="row">
          <% @audio_files.each do |audio_file| %>
            <div class="col-md-4 mb-4">
              <div class="card h-100">
                <% if audio_file.cover_art %>
                  <img src="<%= audio_file.cover_art %>" class="card-img-top" alt="Cover Art">
                <% end %>
                <div class="card-body">
                  <h6 class="card-title"><%= audio_file.title || File.basename(audio_file.filename) %></h6>
                  <p class="card-text">
                    <small class="text-muted">
                      Artist: <%= audio_file.artist || 'Unknown' %><br>
                      Album: <%= audio_file.album || 'Unknown' %><br>
                      Year: <%= audio_file.year || 'Unknown' %><br>
                      Genre: <%= audio_file.genre || 'Unknown' %><br>
                      Composer: <%= audio_file.composer || 'Unknown' %>
                    </small>
                  </p>
                </div>
                <div class="card-footer">
                  <%= button_to "Update Metadata", update_metadata_audio_file_path(audio_file), 
                      method: :post, class: "btn btn-sm btn-outline-primary" %>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <p class="text-muted">No audio files found.</p>
      <% end %>
    </div>
  </div>
</div>
